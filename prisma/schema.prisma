// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  posts         Post[]
  projects      Project[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Post {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  excerpt       String
  content       String    @db.Text
  published     Boolean   @default(false)
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Project {
  id            String    @id @default(cuid())
  name          String
  description   String?
  color         String?   @default("#3b82f6")
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  tasks         Task[]
  columns       Column[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Task {
  id            String    @id @default(cuid())
  title         String
  description   String?
  order         Int       @default(0)
  isToday       Boolean   @default(false)
  todayOrder    Int?
  project       Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId     String
  column        Column    @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Column {
  id            String    @id @default(cuid())
  name          String
  order         Int       @default(0)
  project       Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId     String
  tasks         Task[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

